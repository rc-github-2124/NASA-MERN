{"ast":null,"code":"import _asyncToGenerator from\"/Users/rohitchavan/Downloads/Node JS Udemy/NASA/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/rohitchavan/Downloads/Node JS Udemy/NASA/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000/';function httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}function _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"planets\"));case 2:res=_context.sent;_context.next=5;return res.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}function _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchedLaunches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchedLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchedLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}function _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"launches\"),{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:case\"end\":return _context4.stop();}}},_callee4);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"sources":["/Users/rohitchavan/Downloads/Node JS Udemy/NASA/client/src/hooks/requests.js"],"names":["API_URL","httpGetPlanets","fetch","res","json","httpGetLaunches","response","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id"],"mappings":"2RAAA,GAAMA,CAAAA,OAAO,CAAG,wBAAhB,C,QAEeC,CAAAA,c,oJAAf,iKACmBC,CAAAA,KAAK,WAAIF,OAAJ,YADxB,QACMG,GADN,qCAEaA,CAAAA,GAAG,CAACC,IAAJ,EAFb,6G,yDAMeC,CAAAA,e,uJAAf,4LAC0BH,CAAAA,KAAK,WAAIF,OAAJ,aAD/B,QACQM,QADR,uCAEgCA,CAAAA,QAAQ,CAACF,IAAT,EAFhC,QAEQG,eAFR,iDAGSA,eAAe,CAACC,IAAhB,CAAqB,SAACC,CAAD,CAAGC,CAAH,CAAO,CACjC,MAAOD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA1B,CACD,CAFM,CAHT,0D,0DAQeC,CAAAA,gB,4JAAf,kBAAgCC,MAAhC,8JAEeX,CAAAA,KAAK,WAAIF,OAAJ,aAAsB,CACtCc,MAAM,CAAC,MAD+B,CAEtCC,OAAO,CAAC,CACN,eAAe,kBADT,CAF8B,CAKtCC,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,CALiC,CAAtB,CAFpB,qJAWQ,CACJM,EAAE,CAAC,KADC,CAXR,uE,2DAiBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,uK,kDAKA,OACEpB,cADF,CAEEI,eAFF,CAGEO,gBAHF,CAIEQ,eAJF","sourcesContent":["const API_URL = 'http://localhost:8000/'\n\nasync function httpGetPlanets() {\nconst res =  await fetch(`${API_URL}planets`)\nreturn await res.json()\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  const response  = await fetch(`${API_URL}launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a,b)=>{\n    return a.flightNumber - b.flightNumber\n  })\n}\n\nasync function httpSubmitLaunch(launch) {\ntry{\n  return await fetch(`${API_URL}launches`,{\n    method:\"post\",\n    headers:{\n      \"Content-Type\":\"application/json\"\n    },\n    body:JSON.stringify(launch),\n   })\n}catch(err){\n \n  return{\n    ok:false\n  }\n}\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"]},"metadata":{},"sourceType":"module"}